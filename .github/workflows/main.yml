Here is an updated GitHub Actions workflow that should meet your requirements. This workflow will trigger manually (on demand), install JDK and Android SDK, set up the necessary environment variables, verify the paths using the `doctor` command, create a new project, build the APK, and upload it to GitHub releases.

```yaml
name: Build and Release APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2

    - name: Set up environment variables
      run: |
        echo "JAVA_HOME=$(dirname $(dirname $(readlink -f $(which javac))))" >> $GITHUB_ENV
        echo "ANDROID_HOME=${HOME}/android-sdk" >> $GITHUB_ENV

    - name: Install apkc
      run: |
        wget https://github.com/ajinasokan/apkc/releases/download/v0.4.1/apkc_0.4.1_linux_amd64.tar.gz
        tar -xzf apkc_0.4.1_linux_amd64.tar.gz
        sudo mv apkc /usr/local/bin/

    - name: Verify paths
      run: apkc doctor

    - name: Create new project
      run: apkc create myapp

    - name: Build APK
      run: apkc build

    - name: Upload APK to GitHub Releases
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.repository.upload_url }}
        asset_path: ./myapp/build/app-release.apk
        asset_name: app-release.apk
        asset_content_type: application/vnd.android.package-archive
```

This workflow assumes that the APK is output to `./myapp/build/app-release.apk`. If your build process outputs the APK to a different location, please update the `asset_path` in the "Upload APK to GitHub Releases" step accordingly.

I hope this helps! Let me know if you have any questions or need further assistance.
