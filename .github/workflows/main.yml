name: Build and Release APK

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      APK_NAME: app-release.apk
      KEYSTORE_PATH: debug.keystore

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set Up JDK (with Caching)
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'
        cache: 'gradle'  

    - name: Set Up Android SDK (with Caching)
      uses: android-actions/setup-android@v3
      with:
        components: build-tools;33.0.2

    - name: Verify APKC
      working-directory: ${{ github.workspace }}/tools # Change to tools directory
      run: |
        chmod +x apkc
        echo "${{ github.workspace }}/tools" >> $GITHUB_PATH
        apkc doctor
    
    - name: Download Keystore (if available)
      id: download_keystore
      uses: actions/download-artifact@v3
      with:
        name: keystore

    - name: Generate Keystore (if not available)
      if: steps.download_keystore.outcome == 'failure' # Only run if download failed
      run: |
        keytool -genkey -v -keystore ${{ github.workspace }}/${{ env.KEYSTORE_PATH }} -alias androiddebugkey -keyalg RSA -keysize 2048 -validity 10000 -storepass ${{ secrets.KEYSTORE_PASSWORD }} -keypass ${{ secrets.KEY_PASSWORD }} -dname "CN=Android Debug,O=Android,C=US" 
        echo "Keystore generated successfully!"

    - name: Upload Keystore (if generated)
      if: steps.download_keystore.outcome == 'failure' 
      uses: actions/upload-artifact@v3
      with:
        name: keystore
        path: ${{ github.workspace }}/${{ env.KEYSTORE_PATH }}

    - name: Build APK
      working-directory: ${{ github.workspace }}/src # Change to src directory
      run: ../tools/apkc build . --keystore "${{ github.workspace }}/${{ env.KEYSTORE_PATH }}" --storepass "${{ secrets.KEYSTORE_PASSWORD }}" --keyalias "androiddebugkey"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ github.sha }}
        release_name: Release ${{ github.sha }}
        draft: false

    - name: Upload APK to GitHub Releases
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/src/build/${{ env.APK_NAME }}
        asset_name: ${{ env.APK_NAME }}
        asset_content_type: application/vnd.android.package-archive
